---
title: "Plotly Express"
---


```{mermaid}
%%| fig-width: 6
flowchart LR
A("plotly") --> B("plotly.express")
A --> C("plotly.graph_objects")
B --"high-level API"--> B1("plotly.graph_objects.Figure")
C --"low-level API"--> B1
B1 --> D1("Customization")
B1 --> D2("Composition")
B1 --> D3("Granular control")
```

# Input data

`plotly.express` uses the pandas DataFrame internally to store plotting data, also trying to maintain the data in _long form_ or conventionally tidy form. This has some nice implications for us.

- You can use any object that can be converted into a pandas DataFrame as the input dataset, e.g., [Polars](https://pola.rs) dataframes, numpy arrays, Python dictionaries, etc.
- Plotly will internally convert _wide form_ data to _long form_ data using `pandas.melt`. Note that in the wide-form example below, we hve labels `variable` and `value` which are automatically generated by `plotly.express` due to defaults in the `pandas.melt` function.

:::: {.columns}

::: {.column width="47%"}
```{python}
import plotly.express as px
long_df = px.data.medals_long()
px.bar(long_df, x = 'nation', y = 'count', color = 'medal',
    title = 'Long-form data')
```
:::

::: {.column width="47%"}

```{python}
import plotly.express as px
wide_df = px.data.medals_wide()
px.bar(wide_df, x = 'nation', y = ['gold','silver','bronze'],
    title = 'Wide-form data')

```
:::
::::

**More details [here](https://plotly.com/python/px-arguments/)**
