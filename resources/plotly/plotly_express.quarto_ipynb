{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Plotly Express\"\n",
        "---\n",
        "\n",
        "```{mermaid}\n",
        "%%| fig-width: 6\n",
        "flowchart LR\n",
        "A(\"plotly\") --> B(\"plotly.express\")\n",
        "A --> C(\"plotly.graph_objects\")\n",
        "B --\"high-level API\"--> B1(\"plotly.graph_objects.Figure\")\n",
        "C --\"low-level API\"--> B1\n",
        "B1 --> D1(\"Customization\")\n",
        "B1 --> D2(\"Composition\")\n",
        "B1 --> D3(\"Granular control\")\n",
        "```\n",
        "\n",
        "\n",
        "# Input data\n",
        "\n",
        "`plotly.express` uses the pandas DataFrame internally to store plotting data, also trying to maintain the data in _long form_ or conventionally tidy form. This has some nice implications for us.\n",
        "\n",
        "- You can use any object that can be converted into a pandas DataFrame as the input dataset, e.g., [Polars](https://pola.rs) dataframes, numpy arrays, Python dictionaries, etc.\n",
        "- Plotly will internally convert _wide form_ data to _long form_ data using `pandas.melt`. Note that in the wide-form example below, we hve labels `variable` and `value` which are automatically generated by `plotly.express` due to defaults in the `pandas.melt` function.\n",
        "\n",
        ":::: {.columns}\n",
        "\n",
        "::: {.column width=\"47%\"}"
      ],
      "id": "784e109f"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import plotly.express as px\n",
        "long_df = px.data.medals_long()\n",
        "px.bar(long_df, x = 'nation', y = 'count', color = 'medal',\n",
        "    title = 'Long-form data')"
      ],
      "id": "6b4dfd98",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "\n",
        "::: {.column width=\"47%\"}\n"
      ],
      "id": "582f2642"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import plotly.express as px\n",
        "wide_df = px.data.medals_wide()\n",
        "px.bar(wide_df, x = 'nation', y = ['gold','silver','bronze'],\n",
        "    title = 'Wide-form data')"
      ],
      "id": "d39b28e6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "::::\n",
        "\n",
        "**More details [here](https://plotly.com/python/px-arguments/)**"
      ],
      "id": "8a2bc6db"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/abhijit/Library/Python/3.9/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}